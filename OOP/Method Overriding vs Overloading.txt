Main differences between method overriding and method overloading 

Method overloading means providing two or more separate methods in a class with the same name but different parameters

Method return type may or may not be different and that allows us to reuse the same method name 

Overloading is very handy, it reduces duplicate code and we don't have to remember multiple method names

Methods will be consider overloaded if both follow the following rules
Methods must have the same method name
Methods must have different method parameters

IF methods follow the rules above then they may or may not
Have different return types
Have different access modifiers 
Throw different checked or unchecked exceptions 


Method overriding means defining a method in a child class that already exists in the parent class with the same signature (same name, same arguments)
By extending the parent class the child class gets all the methods defined in the parent class (those methods are also known as derived methods)

When we override a method it is recommended to put @Override above the method definition. 
We can't override static methods only instance methods. 

Methods will be consider overriden if the follow the following rules
It must have the same name and same arguments
Return type can be a subclass of the return type in the parent class
It can't have a lower access modifier. 
For example, if the parent method is protected then using private in child is not allowed but using public in a child is 

